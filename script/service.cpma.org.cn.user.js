// ==UserScript==
// @name         自动学习助手
// @namespace    http://tampermonkey.net/
// @version      1.0.5
// @description  自动快速看视频，自动答题并提交
// @author       千川汇海
// @match        https://service.cpma.org.cn/*
// @icon         https://www.google.com/s2/favicons?sz=64&domain=fusejs.io
// @grant        none
// ==/UserScript==

(function() {
    'use strict';
    
    (()=>{"use strict";function t(t){return Array.isArray?Array.isArray(t):"[object Array]"===c(t)}const e=1/0;function n(t){return null==t?"":function(t){if("string"==typeof t)return t;let n=t+"";return"0"==n&&1/t==-e?"-0":n}(t)}function r(t){return"string"==typeof t}function s(t){return"number"==typeof t}function i(t){return!0===t||!1===t||function(t){return a(t)&&null!==t}(t)&&"[object Boolean]"==c(t)}function a(t){return"object"==typeof t}function o(t){return null!=t}function l(t){return!t.trim().length}function c(t){return null==t?void 0===t?"[object Undefined]":"[object Null]":Object.prototype.toString.call(t)}const h=t=>`Missing ${t} property in key`,d=t=>`Property 'weight' in key '${t}' must be a positive integer`,u=Object.prototype.hasOwnProperty;class f{constructor(t){this._keys=[],this._keyMap={};let e=0;t.forEach((t=>{let n=p(t);this._keys.push(n),this._keyMap[n.id]=n,e+=n.weight})),this._keys.forEach((t=>{t.weight/=e}))}get(t){return this._keyMap[t]}keys(){return this._keys}toJSON(){return JSON.stringify(this._keys)}}function p(e){let n=null,s=null,i=null,a=1,o=null;if(r(e)||t(e))i=e,n=m(e),s=k(e);else{if(!u.call(e,"name"))throw new Error(h("name"));const t=e.name;if(i=t,u.call(e,"weight")&&(a=e.weight,a<=0))throw new Error(d(t));n=m(t),s=k(t),o=e.getFn}return{path:n,id:s,weight:a,src:i,getFn:o}}function m(e){return t(e)?e:e.split(".")}function k(e){return t(e)?e.join("."):e}var g={isCaseSensitive:!1,includeScore:!1,keys:[],shouldSort:!0,sortFn:(t,e)=>t.score===e.score?t.idx<e.idx?-1:1:t.score<e.score?-1:1,includeMatches:!1,findAllMatches:!1,minMatchCharLength:1,location:0,threshold:.6,distance:100,...{useExtendedSearch:!1,getFn:function(e,a){let l=[],c=!1;const h=(e,a,d)=>{if(o(e))if(a[d]){const u=e[a[d]];if(!o(u))return;if(d===a.length-1&&(r(u)||s(u)||i(u)))l.push(n(u));else if(t(u)){c=!0;for(let t=0,e=u.length;t<e;t+=1)h(u[t],a,d+1)}else a.length&&h(u,a,d+1)}else l.push(e)};return h(e,r(a)?a.split("."):a,0),c?l:l[0]},ignoreLocation:!1,ignoreFieldNorm:!1,fieldNormWeight:1}};const b=/[^ ]+/g;class y{constructor({getFn:t=g.getFn,fieldNormWeight:e=g.fieldNormWeight}={}){this.norm=function(t=1,e=3){const n=new Map,r=Math.pow(10,e);return{get(e){const s=e.match(b).length;if(n.has(s))return n.get(s);const i=1/Math.pow(s,.5*t),a=parseFloat(Math.round(i*r)/r);return n.set(s,a),a},clear(){n.clear()}}}(e,3),this.getFn=t,this.isCreated=!1,this.setIndexRecords()}setSources(t=[]){this.docs=t}setIndexRecords(t=[]){this.records=t}setKeys(t=[]){this.keys=t,this._keysMap={},t.forEach(((t,e)=>{this._keysMap[t.id]=e}))}create(){!this.isCreated&&this.docs.length&&(this.isCreated=!0,r(this.docs[0])?this.docs.forEach(((t,e)=>{this._addString(t,e)})):this.docs.forEach(((t,e)=>{this._addObject(t,e)})),this.norm.clear())}add(t){const e=this.size();r(t)?this._addString(t,e):this._addObject(t,e)}removeAt(t){this.records.splice(t,1);for(let e=t,n=this.size();e<n;e+=1)this.records[e].i-=1}getValueForItemAtKeyId(t,e){return t[this._keysMap[e]]}size(){return this.records.length}_addString(t,e){if(!o(t)||l(t))return;let n={v:t,i:e,n:this.norm.get(t)};this.records.push(n)}_addObject(e,n){let s={i:n,$:{}};this.keys.forEach(((n,i)=>{let a=n.getFn?n.getFn(e):this.getFn(e,n.path);if(o(a))if(t(a)){let e=[];const n=[{nestedArrIndex:-1,value:a}];for(;n.length;){const{nestedArrIndex:s,value:i}=n.pop();if(o(i))if(r(i)&&!l(i)){let t={v:i,i:s,n:this.norm.get(i)};e.push(t)}else t(i)&&i.forEach(((t,e)=>{n.push({nestedArrIndex:e,value:t})}))}s.$[i]=e}else if(r(a)&&!l(a)){let t={v:a,n:this.norm.get(a)};s.$[i]=t}})),this.records.push(s)}toJSON(){return{keys:this.keys,records:this.records}}}function w(t,e,{getFn:n=g.getFn,fieldNormWeight:r=g.fieldNormWeight}={}){const s=new y({getFn:n,fieldNormWeight:r});return s.setKeys(t.map(p)),s.setSources(e),s.create(),s}function v(t,{errors:e=0,currentLocation:n=0,expectedLocation:r=0,distance:s=g.distance,ignoreLocation:i=g.ignoreLocation}={}){const a=e/t.length;if(i)return a;const o=Math.abs(r-n);return s?a+o/s:o?1:a}const S=32;function R(t,e,n,{location:r=g.location,distance:s=g.distance,threshold:i=g.threshold,findAllMatches:a=g.findAllMatches,minMatchCharLength:o=g.minMatchCharLength,includeMatches:l=g.includeMatches,ignoreLocation:c=g.ignoreLocation}={}){if(e.length>S)throw new Error(`Pattern length exceeds max of ${S}.`);const h=e.length,d=t.length,u=Math.max(0,Math.min(r,d));let f=i,p=u;const m=o>1||l,k=m?Array(d):[];let b;for(;(b=t.indexOf(e,p))>-1;){let t=v(e,{currentLocation:b,expectedLocation:u,distance:s,ignoreLocation:c});if(f=Math.min(t,f),p=b+h,m){let t=0;for(;t<h;)k[b+t]=1,t+=1}}p=-1;let y=[],w=1,R=h+d;const J=1<<h-1;for(let r=0;r<h;r+=1){let i=0,o=R;for(;i<o;){v(e,{errors:r,currentLocation:u+o,expectedLocation:u,distance:s,ignoreLocation:c})<=f?i=o:R=o,o=Math.floor((R-i)/2+i)}R=o;let l=Math.max(1,u-o+1),g=a?d:Math.min(u+o,d)+h,b=Array(g+2);b[g+1]=(1<<r)-1;for(let i=g;i>=l;i-=1){let a=i-1,o=n[t.charAt(a)];if(m&&(k[a]=+!!o),b[i]=(b[i+1]<<1|1)&o,r&&(b[i]|=(y[i+1]|y[i])<<1|1|y[i+1]),b[i]&J&&(w=v(e,{errors:r,currentLocation:a,expectedLocation:u,distance:s,ignoreLocation:c}),w<=f)){if(f=w,p=a,p<=u)break;l=Math.max(1,2*u-p)}}if(v(e,{errors:r+1,currentLocation:u,expectedLocation:u,distance:s,ignoreLocation:c})>f)break;y=b}const z={isMatch:p>=0,score:Math.max(.001,w)};if(m){const t=function(t=[],e=g.minMatchCharLength){let n=[],r=-1,s=-1,i=0;for(let a=t.length;i<a;i+=1){let a=t[i];a&&-1===r?r=i:a||-1===r||(s=i-1,s-r+1>=e&&n.push([r,s]),r=-1)}return t[i-1]&&i-r>=e&&n.push([r,i-1]),n}(k,o);t.length?l&&(z.indices=t):z.isMatch=!1}return z}function J(t){let e={};for(let n=0,r=t.length;n<r;n+=1){const s=t.charAt(n);e[s]=(e[s]||0)|1<<r-n-1}return e}class z{constructor(t,{location:e=g.location,threshold:n=g.threshold,distance:r=g.distance,includeMatches:s=g.includeMatches,findAllMatches:i=g.findAllMatches,minMatchCharLength:a=g.minMatchCharLength,isCaseSensitive:o=g.isCaseSensitive,ignoreLocation:l=g.ignoreLocation}={}){if(this.options={location:e,threshold:n,distance:r,includeMatches:s,findAllMatches:i,minMatchCharLength:a,isCaseSensitive:o,ignoreLocation:l},this.pattern=o?t:t.toLowerCase(),this.chunks=[],!this.pattern.length)return;const c=(t,e)=>{this.chunks.push({pattern:t,alphabet:J(t),startIndex:e})},h=this.pattern.length;if(h>S){let t=0;const e=h%S,n=h-e;for(;t<n;)c(this.pattern.substr(t,S),t),t+=S;if(e){const t=h-S;c(this.pattern.substr(t),t)}}else c(this.pattern,0)}searchIn(t){const{isCaseSensitive:e,includeMatches:n}=this.options;if(e||(t=t.toLowerCase()),this.pattern===t){let e={isMatch:!0,score:0};return n&&(e.indices=[[0,t.length-1]]),e}const{location:r,distance:s,threshold:i,findAllMatches:a,minMatchCharLength:o,ignoreLocation:l}=this.options;let c=[],h=0,d=!1;this.chunks.forEach((({pattern:e,alphabet:u,startIndex:f})=>{const{isMatch:p,score:m,indices:k}=R(t,e,u,{location:r+f,distance:s,threshold:i,findAllMatches:a,minMatchCharLength:o,includeMatches:n,ignoreLocation:l});p&&(d=!0),h+=m,p&&k&&(c=[...c,...k])}));let u={isMatch:d,score:d?h/this.chunks.length:1};return d&&n&&(u.indices=c),u}}class H{constructor(t){this.pattern=t}static isMultiMatch(t){return V(t,this.multiRegex)}static isSingleMatch(t){return V(t,this.singleRegex)}search(){}}function V(t,e){const n=t.match(e);return n?n[1]:null}class O extends H{constructor(t,{location:e=g.location,threshold:n=g.threshold,distance:r=g.distance,includeMatches:s=g.includeMatches,findAllMatches:i=g.findAllMatches,minMatchCharLength:a=g.minMatchCharLength,isCaseSensitive:o=g.isCaseSensitive,ignoreLocation:l=g.ignoreLocation}={}){super(t),this._bitapSearch=new z(t,{location:e,threshold:n,distance:r,includeMatches:s,findAllMatches:i,minMatchCharLength:a,isCaseSensitive:o,ignoreLocation:l})}static get type(){return"fuzzy"}static get multiRegex(){return/^"(.*)"$/}static get singleRegex(){return/^(.*)$/}search(t){return this._bitapSearch.searchIn(t)}}class Z extends H{constructor(t){super(t)}static get type(){return"include"}static get multiRegex(){return/^'"(.*)"$/}static get singleRegex(){return/^'(.*)$/}search(t){let e,n=0;const r=[],s=this.pattern.length;for(;(e=t.indexOf(this.pattern,n))>-1;)n=e+s,r.push([e,n-1]);const i=!!r.length;return{isMatch:i,score:i?0:1,indices:r}}}const P=[class extends H{constructor(t){super(t)}static get type(){return"exact"}static get multiRegex(){return/^="(.*)"$/}static get singleRegex(){return/^=(.*)$/}search(t){const e=t===this.pattern;return{isMatch:e,score:e?0:1,indices:[0,this.pattern.length-1]}}},Z,class extends H{constructor(t){super(t)}static get type(){return"prefix-exact"}static get multiRegex(){return/^\^"(.*)"$/}static get singleRegex(){return/^\^(.*)$/}search(t){const e=t.startsWith(this.pattern);return{isMatch:e,score:e?0:1,indices:[0,this.pattern.length-1]}}},class extends H{constructor(t){super(t)}static get type(){return"inverse-prefix-exact"}static get multiRegex(){return/^!\^"(.*)"$/}static get singleRegex(){return/^!\^(.*)$/}search(t){const e=!t.startsWith(this.pattern);return{isMatch:e,score:e?0:1,indices:[0,t.length-1]}}},class extends H{constructor(t){super(t)}static get type(){return"inverse-suffix-exact"}static get multiRegex(){return/^!"(.*)"\$$/}static get singleRegex(){return/^!(.*)\$$/}search(t){const e=!t.endsWith(this.pattern);return{isMatch:e,score:e?0:1,indices:[0,t.length-1]}}},class extends H{constructor(t){super(t)}static get type(){return"suffix-exact"}static get multiRegex(){return/^"(.*)"\$$/}static get singleRegex(){return/^(.*)\$$/}search(t){const e=t.endsWith(this.pattern);return{isMatch:e,score:e?0:1,indices:[t.length-this.pattern.length,t.length-1]}}},class extends H{constructor(t){super(t)}static get type(){return"inverse-exact"}static get multiRegex(){return/^!"(.*)"$/}static get singleRegex(){return/^!(.*)$/}search(t){const e=-1===t.indexOf(this.pattern);return{isMatch:e,score:e?0:1,indices:[0,t.length-1]}}},O],q=P.length,x=/ +(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)/;const T=new Set([O.type,Z.type]);class F{constructor(t,{isCaseSensitive:e=g.isCaseSensitive,includeMatches:n=g.includeMatches,minMatchCharLength:r=g.minMatchCharLength,ignoreLocation:s=g.ignoreLocation,findAllMatches:i=g.findAllMatches,location:a=g.location,threshold:o=g.threshold,distance:l=g.distance}={}){this.query=null,this.options={isCaseSensitive:e,includeMatches:n,minMatchCharLength:r,findAllMatches:i,ignoreLocation:s,location:a,threshold:o,distance:l},this.pattern=e?t:t.toLowerCase(),this.query=function(t,e={}){return t.split("|").map((t=>{let n=t.trim().split(x).filter((t=>t&&!!t.trim())),r=[];for(let t=0,s=n.length;t<s;t+=1){const s=n[t];let i=!1,a=-1;for(;!i&&++a<q;){const t=P[a];let n=t.isMultiMatch(s);n&&(r.push(new t(n,e)),i=!0)}if(!i)for(a=-1;++a<q;){const t=P[a];let n=t.isSingleMatch(s);if(n){r.push(new t(n,e));break}}}return r}))}(this.pattern,this.options)}static condition(t,e){return e.useExtendedSearch}searchIn(t){const e=this.query;if(!e)return{isMatch:!1,score:1};const{includeMatches:n,isCaseSensitive:r}=this.options;t=r?t:t.toLowerCase();let s=0,i=[],a=0;for(let r=0,o=e.length;r<o;r+=1){const o=e[r];i.length=0,s=0;for(let e=0,r=o.length;e<r;e+=1){const r=o[e],{isMatch:l,indices:c,score:h}=r.search(t);if(!l){a=0,s=0,i.length=0;break}if(s+=1,a+=h,n){const t=r.constructor.type;T.has(t)?i=[...i,...c]:i.push(c)}}if(s){let t={isMatch:!0,score:a/s};return n&&(t.indices=i),t}}return{isMatch:!1,score:1}}}const j=[];function U(t,e){for(let n=0,r=j.length;n<r;n+=1){let r=j[n];if(r.condition(t,e))return new r(t,e)}return new z(t,e)}const N="$and",L="$or",A="$path",X="$val",K=t=>!(!t[N]&&!t[L]),W=t=>({[N]:Object.keys(t).map((e=>({[e]:t[e]})))});function I(e,n,{auto:s=!0}={}){const i=e=>{let o=Object.keys(e);const l=(t=>!!t[A])(e);if(!l&&o.length>1&&!K(e))return i(W(e));if((e=>!t(e)&&a(e)&&!K(e))(e)){const t=l?e[A]:o[0],i=l?e[X]:e[t];if(!r(i))throw new Error((t=>`Invalid value for key ${t}`)(t));const a={keyId:k(t),pattern:i};return s&&(a.searcher=U(i,n)),a}let c={children:[],operator:o[0]};return o.forEach((n=>{const r=e[n];t(r)&&r.forEach((t=>{c.children.push(i(t))}))})),c};return K(e)||(e=W(e)),i(e)}function D(t,e){const n=t.matches;e.matches=[],o(n)&&n.forEach((t=>{if(!o(t.indices)||!t.indices.length)return;const{indices:n,value:r}=t;let s={indices:n,value:r};t.key&&(s.key=t.key.src),t.idx>-1&&(s.refIndex=t.idx),e.matches.push(s)}))}function G(t,e){e.score=t.score}class E{constructor(t,e={},n){this.options={...g,...e},this.options.useExtendedSearch,this._keyStore=new f(this.options.keys),this.setCollection(t,n)}setCollection(t,e){if(this._docs=t,e&&!(e instanceof y))throw new Error("Incorrect 'index' type");this._myIndex=e||w(this.options.keys,this._docs,{getFn:this.options.getFn,fieldNormWeight:this.options.fieldNormWeight})}add(t){o(t)&&(this._docs.push(t),this._myIndex.add(t))}remove(t=()=>!1){const e=[];for(let n=0,r=this._docs.length;n<r;n+=1){const s=this._docs[n];t(s,n)&&(this.removeAt(n),n-=1,r-=1,e.push(s))}return e}removeAt(t){this._docs.splice(t,1),this._myIndex.removeAt(t)}getIndex(){return this._myIndex}search(t,{limit:e=-1}={}){const{includeMatches:n,includeScore:i,shouldSort:a,sortFn:o,ignoreFieldNorm:l}=this.options;let c=r(t)?r(this._docs[0])?this._searchStringList(t):this._searchObjectList(t):this._searchLogical(t);return function(t,{ignoreFieldNorm:e=g.ignoreFieldNorm}){t.forEach((t=>{let n=1;t.matches.forEach((({key:t,norm:r,score:s})=>{const i=t?t.weight:null;n*=Math.pow(0===s&&i?Number.EPSILON:s,(i||1)*(e?1:r))})),t.score=n}))}(c,{ignoreFieldNorm:l}),a&&c.sort(o),s(e)&&e>-1&&(c=c.slice(0,e)),function(t,e,{includeMatches:n=g.includeMatches,includeScore:r=g.includeScore}={}){const s=[];return n&&s.push(D),r&&s.push(G),t.map((t=>{const{idx:n}=t,r={item:e[n],refIndex:n};return s.length&&s.forEach((e=>{e(t,r)})),r}))}(c,this._docs,{includeMatches:n,includeScore:i})}_searchStringList(t){const e=U(t,this.options),{records:n}=this._myIndex,r=[];return n.forEach((({v:t,i:n,n:s})=>{if(!o(t))return;const{isMatch:i,score:a,indices:l}=e.searchIn(t);i&&r.push({item:t,idx:n,matches:[{score:a,value:t,norm:s,indices:l}]})})),r}_searchLogical(t){const e=I(t,this.options),n=(t,e,r)=>{if(!t.children){const{keyId:n,searcher:s}=t,i=this._findMatches({key:this._keyStore.get(n),value:this._myIndex.getValueForItemAtKeyId(e,n),searcher:s});return i&&i.length?[{idx:r,item:e,matches:i}]:[]}const s=[];for(let i=0,a=t.children.length;i<a;i+=1){const a=t.children[i],o=n(a,e,r);if(o.length)s.push(...o);else if(t.operator===N)return[]}return s},r=this._myIndex.records,s={},i=[];return r.forEach((({$:t,i:r})=>{if(o(t)){let a=n(e,t,r);a.length&&(s[r]||(s[r]={idx:r,item:t,matches:[]},i.push(s[r])),a.forEach((({matches:t})=>{s[r].matches.push(...t)})))}})),i}_searchObjectList(t){const e=U(t,this.options),{keys:n,records:r}=this._myIndex,s=[];return r.forEach((({$:t,i:r})=>{if(!o(t))return;let i=[];n.forEach(((n,r)=>{i.push(...this._findMatches({key:n,value:t[r],searcher:e}))})),i.length&&s.push({idx:r,item:t,matches:i})})),s}_findMatches({key:e,value:n,searcher:r}){if(!o(n))return[];let s=[];if(t(n))n.forEach((({v:t,i:n,n:i})=>{if(!o(t))return;const{isMatch:a,score:l,indices:c}=r.searchIn(t);a&&s.push({score:l,key:e,value:t,idx:n,norm:i,indices:c})}));else{const{v:t,n:i}=n,{isMatch:a,score:o,indices:l}=r.searchIn(t);a&&s.push({score:o,key:e,value:t,norm:i,indices:l})}return s}}E.version="7.0.0",E.createIndex=w,E.parseIndex=function(t,{getFn:e=g.getFn,fieldNormWeight:n=g.fieldNormWeight}={}){const{keys:r,records:s}=t,i=new y({getFn:e,fieldNormWeight:n});return i.setKeys(r),i.setIndexRecords(s),i},E.config=g,E.parseQuery=I,function(...t){j.push(...t)}(F);function M(t){let e=t.length;for(;--e>=0;)t[e]=0}const Q=256,Y=286,C=30,B=15,_=new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]),$=new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]),tt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]),et=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),nt=new Array(576);M(nt);const rt=new Array(60);M(rt);const st=new Array(512);M(st);const it=new Array(256);M(it);const at=new Array(29);M(at);const ot=new Array(C);function lt(t,e,n,r,s){this.static_tree=t,this.extra_bits=e,this.extra_base=n,this.elems=r,this.max_length=s,this.has_stree=t&&t.length}let ct,ht,dt;function ut(t,e){this.dyn_tree=t,this.max_code=0,this.stat_desc=e}M(ot);const ft=t=>t<256?st[t]:st[256+(t>>>7)],pt=(t,e)=>{t.pending_buf[t.pending++]=255&e,t.pending_buf[t.pending++]=e>>>8&255},mt=(t,e,n)=>{t.bi_valid>16-n?(t.bi_buf|=e<<t.bi_valid&65535,pt(t,t.bi_buf),t.bi_buf=e>>16-t.bi_valid,t.bi_valid+=n-16):(t.bi_buf|=e<<t.bi_valid&65535,t.bi_valid+=n)},kt=(t,e,n)=>{mt(t,n[2*e],n[2*e+1])},gt=(t,e)=>{let n=0;do{n|=1&t,t>>>=1,n<<=1}while(--e>0);return n>>>1},bt=(t,e,n)=>{const r=new Array(16);let s,i,a=0;for(s=1;s<=B;s++)a=a+n[s-1]<<1,r[s]=a;for(i=0;i<=e;i++){let e=t[2*i+1];0!==e&&(t[2*i]=gt(r[e]++,e))}},yt=t=>{let e;for(e=0;e<Y;e++)t.dyn_ltree[2*e]=0;for(e=0;e<C;e++)t.dyn_dtree[2*e]=0;for(e=0;e<19;e++)t.bl_tree[2*e]=0;t.dyn_ltree[512]=1,t.opt_len=t.static_len=0,t.sym_next=t.matches=0},wt=t=>{t.bi_valid>8?pt(t,t.bi_buf):t.bi_valid>0&&(t.pending_buf[t.pending++]=t.bi_buf),t.bi_buf=0,t.bi_valid=0},vt=(t,e,n,r)=>{const s=2*e,i=2*n;return t[s]<t[i]||t[s]===t[i]&&r[e]<=r[n]},St=(t,e,n)=>{const r=t.heap[n];let s=n<<1;for(;s<=t.heap_len&&(s<t.heap_len&&vt(e,t.heap[s+1],t.heap[s],t.depth)&&s++,!vt(e,r,t.heap[s],t.depth));)t.heap[n]=t.heap[s],n=s,s<<=1;t.heap[n]=r},Rt=(t,e,n)=>{let r,s,i,a,o=0;if(0!==t.sym_next)do{r=255&t.pending_buf[t.sym_buf+o++],r+=(255&t.pending_buf[t.sym_buf+o++])<<8,s=t.pending_buf[t.sym_buf+o++],0===r?kt(t,s,e):(i=it[s],kt(t,i+Q+1,e),a=_[i],0!==a&&(s-=at[i],mt(t,s,a)),r--,i=ft(r),kt(t,i,n),a=$[i],0!==a&&(r-=ot[i],mt(t,r,a)))}while(o<t.sym_next);kt(t,256,e)},Jt=(t,e)=>{const n=e.dyn_tree,r=e.stat_desc.static_tree,s=e.stat_desc.has_stree,i=e.stat_desc.elems;let a,o,l,c=-1;for(t.heap_len=0,t.heap_max=573,a=0;a<i;a++)0!==n[2*a]?(t.heap[++t.heap_len]=c=a,t.depth[a]=0):n[2*a+1]=0;for(;t.heap_len<2;)l=t.heap[++t.heap_len]=c<2?++c:0,n[2*l]=1,t.depth[l]=0,t.opt_len--,s&&(t.static_len-=r[2*l+1]);for(e.max_code=c,a=t.heap_len>>1;a>=1;a--)St(t,n,a);l=i;do{a=t.heap[1],t.heap[1]=t.heap[t.heap_len--],St(t,n,1),o=t.heap[1],t.heap[--t.heap_max]=a,t.heap[--t.heap_max]=o,n[2*l]=n[2*a]+n[2*o],t.depth[l]=(t.depth[a]>=t.depth[o]?t.depth[a]:t.depth[o])+1,n[2*a+1]=n[2*o+1]=l,t.heap[1]=l++,St(t,n,1)}while(t.heap_len>=2);t.heap[--t.heap_max]=t.heap[1],((t,e)=>{const n=e.dyn_tree,r=e.max_code,s=e.stat_desc.static_tree,i=e.stat_desc.has_stree,a=e.stat_desc.extra_bits,o=e.stat_desc.extra_base,l=e.stat_desc.max_length;let c,h,d,u,f,p,m=0;for(u=0;u<=B;u++)t.bl_count[u]=0;for(n[2*t.heap[t.heap_max]+1]=0,c=t.heap_max+1;c<573;c++)h=t.heap[c],u=n[2*n[2*h+1]+1]+1,u>l&&(u=l,m++),n[2*h+1]=u,h>r||(t.bl_count[u]++,f=0,h>=o&&(f=a[h-o]),p=n[2*h],t.opt_len+=p*(u+f),i&&(t.static_len+=p*(s[2*h+1]+f)));if(0!==m){do{for(u=l-1;0===t.bl_count[u];)u--;t.bl_count[u]--,t.bl_count[u+1]+=2,t.bl_count[l]--,m-=2}while(m>0);for(u=l;0!==u;u--)for(h=t.bl_count[u];0!==h;)d=t.heap[--c],d>r||(n[2*d+1]!==u&&(t.opt_len+=(u-n[2*d+1])*n[2*d],n[2*d+1]=u),h--)}})(t,e),bt(n,c,t.bl_count)},zt=(t,e,n)=>{let r,s,i=-1,a=e[1],o=0,l=7,c=4;for(0===a&&(l=138,c=3),e[2*(n+1)+1]=65535,r=0;r<=n;r++)s=a,a=e[2*(r+1)+1],++o<l&&s===a||(o<c?t.bl_tree[2*s]+=o:0!==s?(s!==i&&t.bl_tree[2*s]++,t.bl_tree[32]++):o<=10?t.bl_tree[34]++:t.bl_tree[36]++,o=0,i=s,0===a?(l=138,c=3):s===a?(l=6,c=3):(l=7,c=4))},Ht=(t,e,n)=>{let r,s,i=-1,a=e[1],o=0,l=7,c=4;for(0===a&&(l=138,c=3),r=0;r<=n;r++)if(s=a,a=e[2*(r+1)+1],!(++o<l&&s===a)){if(o<c)do{kt(t,s,t.bl_tree)}while(0!=--o);else 0!==s?(s!==i&&(kt(t,s,t.bl_tree),o--),kt(t,16,t.bl_tree),mt(t,o-3,2)):o<=10?(kt(t,17,t.bl_tree),mt(t,o-3,3)):(kt(t,18,t.bl_tree),mt(t,o-11,7));o=0,i=s,0===a?(l=138,c=3):s===a?(l=6,c=3):(l=7,c=4)}};let Vt=!1;const Ot=(t,e,n,r)=>{mt(t,0+(r?1:0),3),wt(t),pt(t,n),pt(t,~n),n&&t.pending_buf.set(t.window.subarray(e,e+n),t.pending),t.pending+=n};var Zt=(t,e,n,r)=>{let s,i,a=0;t.level>0?(2===t.strm.data_type&&(t.strm.data_type=(t=>{let e,n=4093624447;for(e=0;e<=31;e++,n>>>=1)if(1&n&&0!==t.dyn_ltree[2*e])return 0;if(0!==t.dyn_ltree[18]||0!==t.dyn_ltree[20]||0!==t.dyn_ltree[26])return 1;for(e=32;e<Q;e++)if(0!==t.dyn_ltree[2*e])return 1;return 0})(t)),Jt(t,t.l_desc),Jt(t,t.d_desc),a=(t=>{let e;for(zt(t,t.dyn_ltree,t.l_desc.max_code),zt(t,t.dyn_dtree,t.d_desc.max_code),Jt(t,t.bl_desc),e=18;e>=3&&0===t.bl_tree[2*et[e]+1];e--);return t.opt_len+=3*(e+1)+5+5+4,e})(t),s=t.opt_len+3+7>>>3,i=t.static_len+3+7>>>3,i<=s&&(s=i)):s=i=n+5,n+4<=s&&-1!==e?Ot(t,e,n,r):4===t.strategy||i===s?(mt(t,2+(r?1:0),3),Rt(t,nt,rt)):(mt(t,4+(r?1:0),3),((t,e,n,r)=>{let s;for(mt(t,e-257,5),mt(t,n-1,5),mt(t,r-4,4),s=0;s<r;s++)mt(t,t.bl_tree[2*et[s]+1],3);Ht(t,t.dyn_ltree,e-1),Ht(t,t.dyn_dtree,n-1)})(t,t.l_desc.max_code+1,t.d_desc.max_code+1,a+1),Rt(t,t.dyn_ltree,t.dyn_dtree)),yt(t),r&&wt(t)},Pt={_tr_init:t=>{Vt||((()=>{let t,e,n,r,s;const i=new Array(16);for(n=0,r=0;r<28;r++)for(at[r]=n,t=0;t<1<<_[r];t++)it[n++]=r;for(it[n-1]=r,s=0,r=0;r<16;r++)for(ot[r]=s,t=0;t<1<<$[r];t++)st[s++]=r;for(s>>=7;r<C;r++)for(ot[r]=s<<7,t=0;t<1<<$[r]-7;t++)st[256+s++]=r;for(e=0;e<=B;e++)i[e]=0;for(t=0;t<=143;)nt[2*t+1]=8,t++,i[8]++;for(;t<=255;)nt[2*t+1]=9,t++,i[9]++;for(;t<=279;)nt[2*t+1]=7,t++,i[7]++;for(;t<=287;)nt[2*t+1]=8,t++,i[8]++;for(bt(nt,287,i),t=0;t<C;t++)rt[2*t+1]=5,rt[2*t]=gt(t,5);ct=new lt(nt,_,257,Y,B),ht=new lt(rt,$,0,C,B),dt=new lt(new Array(0),tt,0,19,7)})(),Vt=!0),t.l_desc=new ut(t.dyn_ltree,ct),t.d_desc=new ut(t.dyn_dtree,ht),t.bl_desc=new ut(t.bl_tree,dt),t.bi_buf=0,t.bi_valid=0,yt(t)},_tr_stored_block:Ot,_tr_flush_block:Zt,_tr_tally:(t,e,n)=>(t.pending_buf[t.sym_buf+t.sym_next++]=e,t.pending_buf[t.sym_buf+t.sym_next++]=e>>8,t.pending_buf[t.sym_buf+t.sym_next++]=n,0===e?t.dyn_ltree[2*n]++:(t.matches++,e--,t.dyn_ltree[2*(it[n]+Q+1)]++,t.dyn_dtree[2*ft(e)]++),t.sym_next===t.sym_end),_tr_align:t=>{mt(t,2,3),kt(t,256,nt),(t=>{16===t.bi_valid?(pt(t,t.bi_buf),t.bi_buf=0,t.bi_valid=0):t.bi_valid>=8&&(t.pending_buf[t.pending++]=255&t.bi_buf,t.bi_buf>>=8,t.bi_valid-=8)})(t)}};var qt=(t,e,n,r)=>{let s=65535&t,i=t>>>16&65535,a=0;for(;0!==n;){a=n>2e3?2e3:n,n-=a;do{s=s+e[r++]|0,i=i+s|0}while(--a);s%=65521,i%=65521}return s|i<<16};const xt=new Uint32Array((()=>{let t,e=[];for(var n=0;n<256;n++){t=n;for(var r=0;r<8;r++)t=1&t?3988292384^t>>>1:t>>>1;e[n]=t}return e})());var Tt=(t,e,n,r)=>{const s=xt,i=r+n;t^=-1;for(let n=r;n<i;n++)t=t>>>8^s[255&(t^e[n])];return~t},Ft={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"},jt={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};const{_tr_init:Ut,_tr_stored_block:Nt,_tr_flush_block:Lt,_tr_tally:At,_tr_align:Xt}=Pt,{Z_NO_FLUSH:Kt,Z_PARTIAL_FLUSH:Wt,Z_FULL_FLUSH:It,Z_FINISH:Dt,Z_BLOCK:Gt,Z_OK:Et,Z_STREAM_END:Mt,Z_STREAM_ERROR:Qt,Z_DATA_ERROR:Yt,Z_BUF_ERROR:Ct,Z_DEFAULT_COMPRESSION:Bt,Z_FILTERED:_t,Z_HUFFMAN_ONLY:$t,Z_RLE:te,Z_FIXED:ee,Z_DEFAULT_STRATEGY:ne,Z_UNKNOWN:re,Z_DEFLATED:se}=jt,ie=258,ae=262,oe=42,le=113,ce=666,he=(t,e)=>(t.msg=Ft[e],e),de=t=>2*t-(t>4?9:0),ue=t=>{let e=t.length;for(;--e>=0;)t[e]=0},fe=t=>{let e,n,r,s=t.w_size;e=t.hash_size,r=e;do{n=t.head[--r],t.head[r]=n>=s?n-s:0}while(--e);e=s,r=e;do{n=t.prev[--r],t.prev[r]=n>=s?n-s:0}while(--e)};let pe=(t,e,n)=>(e<<t.hash_shift^n)&t.hash_mask;const me=t=>{const e=t.state;let n=e.pending;n>t.avail_out&&(n=t.avail_out),0!==n&&(t.output.set(e.pending_buf.subarray(e.pending_out,e.pending_out+n),t.next_out),t.next_out+=n,e.pending_out+=n,t.total_out+=n,t.avail_out-=n,e.pending-=n,0===e.pending&&(e.pending_out=0))},ke=(t,e)=>{Lt(t,t.block_start>=0?t.block_start:-1,t.strstart-t.block_start,e),t.block_start=t.strstart,me(t.strm)},ge=(t,e)=>{t.pending_buf[t.pending++]=e},be=(t,e)=>{t.pending_buf[t.pending++]=e>>>8&255,t.pending_buf[t.pending++]=255&e},ye=(t,e,n,r)=>{let s=t.avail_in;return s>r&&(s=r),0===s?0:(t.avail_in-=s,e.set(t.input.subarray(t.next_in,t.next_in+s),n),1===t.state.wrap?t.adler=qt(t.adler,e,s,n):2===t.state.wrap&&(t.adler=Tt(t.adler,e,s,n)),t.next_in+=s,t.total_in+=s,s)},we=(t,e)=>{let n,r,s=t.max_chain_length,i=t.strstart,a=t.prev_length,o=t.nice_match;const l=t.strstart>t.w_size-ae?t.strstart-(t.w_size-ae):0,c=t.window,h=t.w_mask,d=t.prev,u=t.strstart+ie;let f=c[i+a-1],p=c[i+a];t.prev_length>=t.good_match&&(s>>=2),o>t.lookahead&&(o=t.lookahead);do{if(n=e,c[n+a]===p&&c[n+a-1]===f&&c[n]===c[i]&&c[++n]===c[i+1]){i+=2,n++;do{}while(c[++i]===c[++n]&&c[++i]===c[++n]&&c[++i]===c[++n]&&c[++i]===c[++n]&&c[++i]===c[++n]&&c[++i]===c[++n]&&c[++i]===c[++n]&&c[++i]===c[++n]&&i<u);if(r=ie-(u-i),i=u-ie,r>a){if(t.match_start=e,a=r,r>=o)break;f=c[i+a-1],p=c[i+a]}}}while((e=d[e&h])>l&&0!=--s);return a<=t.lookahead?a:t.lookahead},ve=t=>{const e=t.w_size;let n,r,s;do{if(r=t.window_size-t.lookahead-t.strstart,t.strstart>=e+(e-ae)&&(t.window.set(t.window.subarray(e,e+e-r),0),t.match_start-=e,t.strstart-=e,t.block_start-=e,t.insert>t.strstart&&(t.insert=t.strstart),fe(t),r+=e),0===t.strm.avail_in)break;if(n=ye(t.strm,t.window,t.strstart+t.lookahead,r),t.lookahead+=n,t.lookahead+t.insert>=3)for(s=t.strstart-t.insert,t.ins_h=t.window[s],t.ins_h=pe(t,t.ins_h,t.window[s+1]);t.insert&&(t.ins_h=pe(t,t.ins_h,t.window[s+3-1]),t.prev[s&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=s,s++,t.insert--,!(t.lookahead+t.insert<3)););}while(t.lookahead<ae&&0!==t.strm.avail_in)},Se=(t,e)=>{let n,r,s,i=t.pending_buf_size-5>t.w_size?t.w_size:t.pending_buf_size-5,a=0,o=t.strm.avail_in;do{if(n=65535,s=t.bi_valid+42>>3,t.strm.avail_out<s)break;if(s=t.strm.avail_out-s,r=t.strstart-t.block_start,n>r+t.strm.avail_in&&(n=r+t.strm.avail_in),n>s&&(n=s),n<i&&(0===n&&e!==Dt||e===Kt||n!==r+t.strm.avail_in))break;a=e===Dt&&n===r+t.strm.avail_in?1:0,Nt(t,0,0,a),t.pending_buf[t.pending-4]=n,t.pending_buf[t.pending-3]=n>>8,t.pending_buf[t.pending-2]=~n,t.pending_buf[t.pending-1]=~n>>8,me(t.strm),r&&(r>n&&(r=n),t.strm.output.set(t.window.subarray(t.block_start,t.block_start+r),t.strm.next_out),t.strm.next_out+=r,t.strm.avail_out-=r,t.strm.total_out+=r,t.block_start+=r,n-=r),n&&(ye(t.strm,t.strm.output,t.strm.next_out,n),t.strm.next_out+=n,t.strm.avail_out-=n,t.strm.total_out+=n)}while(0===a);return o-=t.strm.avail_in,o&&(o>=t.w_size?(t.matches=2,t.window.set(t.strm.input.subarray(t.strm.next_in-t.w_size,t.strm.next_in),0),t.strstart=t.w_size,t.insert=t.strstart):(t.window_size-t.strstart<=o&&(t.strstart-=t.w_size,t.window.set(t.window.subarray(t.w_size,t.w_size+t.strstart),0),t.matches<2&&t.matches++,t.insert>t.strstart&&(t.insert=t.strstart)),t.window.set(t.strm.input.subarray(t.strm.next_in-o,t.strm.next_in),t.strstart),t.strstart+=o,t.insert+=o>t.w_size-t.insert?t.w_size-t.insert:o),t.block_start=t.strstart),t.high_water<t.strstart&&(t.high_water=t.strstart),a?4:e!==Kt&&e!==Dt&&0===t.strm.avail_in&&t.strstart===t.block_start?2:(s=t.window_size-t.strstart,t.strm.avail_in>s&&t.block_start>=t.w_size&&(t.block_start-=t.w_size,t.strstart-=t.w_size,t.window.set(t.window.subarray(t.w_size,t.w_size+t.strstart),0),t.matches<2&&t.matches++,s+=t.w_size,t.insert>t.strstart&&(t.insert=t.strstart)),s>t.strm.avail_in&&(s=t.strm.avail_in),s&&(ye(t.strm,t.window,t.strstart,s),t.strstart+=s,t.insert+=s>t.w_size-t.insert?t.w_size-t.insert:s),t.high_water<t.strstart&&(t.high_water=t.strstart),s=t.bi_valid+42>>3,s=t.pending_buf_size-s>65535?65535:t.pending_buf_size-s,i=s>t.w_size?t.w_size:s,r=t.strstart-t.block_start,(r>=i||(r||e===Dt)&&e!==Kt&&0===t.strm.avail_in&&r<=s)&&(n=r>s?s:r,a=e===Dt&&0===t.strm.avail_in&&n===r?1:0,Nt(t,t.block_start,n,a),t.block_start+=n,me(t.strm)),a?3:1)},Re=(t,e)=>{let n,r;for(;;){if(t.lookahead<ae){if(ve(t),t.lookahead<ae&&e===Kt)return 1;if(0===t.lookahead)break}if(n=0,t.lookahead>=3&&(t.ins_h=pe(t,t.ins_h,t.window[t.strstart+3-1]),n=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),0!==n&&t.strstart-n<=t.w_size-ae&&(t.match_length=we(t,n)),t.match_length>=3)if(r=At(t,t.strstart-t.match_start,t.match_length-3),t.lookahead-=t.match_length,t.match_length<=t.max_lazy_match&&t.lookahead>=3){t.match_length--;do{t.strstart++,t.ins_h=pe(t,t.ins_h,t.window[t.strstart+3-1]),n=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart}while(0!=--t.match_length);t.strstart++}else t.strstart+=t.match_length,t.match_length=0,t.ins_h=t.window[t.strstart],t.ins_h=pe(t,t.ins_h,t.window[t.strstart+1]);else r=At(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++;if(r&&(ke(t,!1),0===t.strm.avail_out))return 1}return t.insert=t.strstart<2?t.strstart:2,e===Dt?(ke(t,!0),0===t.strm.avail_out?3:4):t.sym_next&&(ke(t,!1),0===t.strm.avail_out)?1:2},Je=(t,e)=>{let n,r,s;for(;;){if(t.lookahead<ae){if(ve(t),t.lookahead<ae&&e===Kt)return 1;if(0===t.lookahead)break}if(n=0,t.lookahead>=3&&(t.ins_h=pe(t,t.ins_h,t.window[t.strstart+3-1]),n=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),t.prev_length=t.match_length,t.prev_match=t.match_start,t.match_length=2,0!==n&&t.prev_length<t.max_lazy_match&&t.strstart-n<=t.w_size-ae&&(t.match_length=we(t,n),t.match_length<=5&&(t.strategy===_t||3===t.match_length&&t.strstart-t.match_start>4096)&&(t.match_length=2)),t.prev_length>=3&&t.match_length<=t.prev_length){s=t.strstart+t.lookahead-3,r=At(t,t.strstart-1-t.prev_match,t.prev_length-3),t.lookahead-=t.prev_length-1,t.prev_length-=2;do{++t.strstart<=s&&(t.ins_h=pe(t,t.ins_h,t.window[t.strstart+3-1]),n=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart)}while(0!=--t.prev_length);if(t.match_available=0,t.match_length=2,t.strstart++,r&&(ke(t,!1),0===t.strm.avail_out))return 1}else if(t.match_available){if(r=At(t,0,t.window[t.strstart-1]),r&&ke(t,!1),t.strstart++,t.lookahead--,0===t.strm.avail_out)return 1}else t.match_available=1,t.strstart++,t.lookahead--}return t.match_available&&(r=At(t,0,t.window[t.strstart-1]),t.match_available=0),t.insert=t.strstart<2?t.strstart:2,e===Dt?(ke(t,!0),0===t.strm.avail_out?3:4):t.sym_next&&(ke(t,!1),0===t.strm.avail_out)?1:2};function ze(t,e,n,r,s){this.good_length=t,this.max_lazy=e,this.nice_length=n,this.max_chain=r,this.func=s}const He=[new ze(0,0,0,0,Se),new ze(4,4,8,4,Re),new ze(4,5,16,8,Re),new ze(4,6,32,32,Re),new ze(4,4,16,16,Je),new ze(8,16,32,32,Je),new ze(8,16,128,128,Je),new ze(8,32,128,256,Je),new ze(32,128,258,1024,Je),new ze(32,258,258,4096,Je)];function Ve(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=se,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new Uint16Array(1146),this.dyn_dtree=new Uint16Array(122),this.bl_tree=new Uint16Array(78),ue(this.dyn_ltree),ue(this.dyn_dtree),ue(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new Uint16Array(16),this.heap=new Uint16Array(573),ue(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new Uint16Array(573),ue(this.depth),this.sym_buf=0,this.lit_bufsize=0,this.sym_next=0,this.sym_end=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}const Oe=t=>{if(!t)return 1;const e=t.state;return!e||e.strm!==t||e.status!==oe&&57!==e.status&&69!==e.status&&73!==e.status&&91!==e.status&&103!==e.status&&e.status!==le&&e.status!==ce?1:0},Ze=t=>{if(Oe(t))return he(t,Qt);t.total_in=t.total_out=0,t.data_type=re;const e=t.state;return e.pending=0,e.pending_out=0,e.wrap<0&&(e.wrap=-e.wrap),e.status=2===e.wrap?57:e.wrap?oe:le,t.adler=2===e.wrap?0:1,e.last_flush=-2,Ut(e),Et},Pe=t=>{const e=Ze(t);var n;return e===Et&&((n=t.state).window_size=2*n.w_size,ue(n.head),n.max_lazy_match=He[n.level].max_lazy,n.good_match=He[n.level].good_length,n.nice_match=He[n.level].nice_length,n.max_chain_length=He[n.level].max_chain,n.strstart=0,n.block_start=0,n.lookahead=0,n.insert=0,n.match_length=n.prev_length=2,n.match_available=0,n.ins_h=0),e},qe=(t,e,n,r,s,i)=>{if(!t)return Qt;let a=1;if(e===Bt&&(e=6),r<0?(a=0,r=-r):r>15&&(a=2,r-=16),s<1||s>9||n!==se||r<8||r>15||e<0||e>9||i<0||i>ee||8===r&&1!==a)return he(t,Qt);8===r&&(r=9);const o=new Ve;return t.state=o,o.strm=t,o.status=oe,o.wrap=a,o.gzhead=null,o.w_bits=r,o.w_size=1<<o.w_bits,o.w_mask=o.w_size-1,o.hash_bits=s+7,o.hash_size=1<<o.hash_bits,o.hash_mask=o.hash_size-1,o.hash_shift=~~((o.hash_bits+3-1)/3),o.window=new Uint8Array(2*o.w_size),o.head=new Uint16Array(o.hash_size),o.prev=new Uint16Array(o.w_size),o.lit_bufsize=1<<s+6,o.pending_buf_size=4*o.lit_bufsize,o.pending_buf=new Uint8Array(o.pending_buf_size),o.sym_buf=o.lit_bufsize,o.sym_end=3*(o.lit_bufsize-1),o.level=e,o.strategy=i,o.method=n,Pe(t)};var xe={deflateInit:(t,e)=>qe(t,e,se,15,8,ne),deflateInit2:qe,deflateReset:Pe,deflateResetKeep:Ze,deflateSetHeader:(t,e)=>Oe(t)||2!==t.state.wrap?Qt:(t.state.gzhead=e,Et),deflate:(t,e)=>{if(Oe(t)||e>Gt||e<0)return t?he(t,Qt):Qt;const n=t.state;if(!t.output||0!==t.avail_in&&!t.input||n.status===ce&&e!==Dt)return he(t,0===t.avail_out?Ct:Qt);const r=n.last_flush;if(n.last_flush=e,0!==n.pending){if(me(t),0===t.avail_out)return n.last_flush=-1,Et}else if(0===t.avail_in&&de(e)<=de(r)&&e!==Dt)return he(t,Ct);if(n.status===ce&&0!==t.avail_in)return he(t,Ct);if(n.status===oe&&0===n.wrap&&(n.status=le),n.status===oe){let e=se+(n.w_bits-8<<4)<<8,r=-1;if(r=n.strategy>=$t||n.level<2?0:n.level<6?1:6===n.level?2:3,e|=r<<6,0!==n.strstart&&(e|=32),e+=31-e%31,be(n,e),0!==n.strstart&&(be(n,t.adler>>>16),be(n,65535&t.adler)),t.adler=1,n.status=le,me(t),0!==n.pending)return n.last_flush=-1,Et}if(57===n.status)if(t.adler=0,ge(n,31),ge(n,139),ge(n,8),n.gzhead)ge(n,(n.gzhead.text?1:0)+(n.gzhead.hcrc?2:0)+(n.gzhead.extra?4:0)+(n.gzhead.name?8:0)+(n.gzhead.comment?16:0)),ge(n,255&n.gzhead.time),ge(n,n.gzhead.time>>8&255),ge(n,n.gzhead.time>>16&255),ge(n,n.gzhead.time>>24&255),ge(n,9===n.level?2:n.strategy>=$t||n.level<2?4:0),ge(n,255&n.gzhead.os),n.gzhead.extra&&n.gzhead.extra.length&&(ge(n,255&n.gzhead.extra.length),ge(n,n.gzhead.extra.length>>8&255)),n.gzhead.hcrc&&(t.adler=Tt(t.adler,n.pending_buf,n.pending,0)),n.gzindex=0,n.status=69;else if(ge(n,0),ge(n,0),ge(n,0),ge(n,0),ge(n,0),ge(n,9===n.level?2:n.strategy>=$t||n.level<2?4:0),ge(n,3),n.status=le,me(t),0!==n.pending)return n.last_flush=-1,Et;if(69===n.status){if(n.gzhead.extra){let e=n.pending,r=(65535&n.gzhead.extra.length)-n.gzindex;for(;n.pending+r>n.pending_buf_size;){let s=n.pending_buf_size-n.pending;if(n.pending_buf.set(n.gzhead.extra.subarray(n.gzindex,n.gzindex+s),n.pending),n.pending=n.pending_buf_size,n.gzhead.hcrc&&n.pending>e&&(t.adler=Tt(t.adler,n.pending_buf,n.pending-e,e)),n.gzindex+=s,me(t),0!==n.pending)return n.last_flush=-1,Et;e=0,r-=s}let s=new Uint8Array(n.gzhead.extra);n.pending_buf.set(s.subarray(n.gzindex,n.gzindex+r),n.pending),n.pending+=r,n.gzhead.hcrc&&n.pending>e&&(t.adler=Tt(t.adler,n.pending_buf,n.pending-e,e)),n.gzindex=0}n.status=73}if(73===n.status){if(n.gzhead.name){let e,r=n.pending;do{if(n.pending===n.pending_buf_size){if(n.gzhead.hcrc&&n.pending>r&&(t.adler=Tt(t.adler,n.pending_buf,n.pending-r,r)),me(t),0!==n.pending)return n.last_flush=-1,Et;r=0}e=n.gzindex<n.gzhead.name.length?255&n.gzhead.name.charCodeAt(n.gzindex++):0,ge(n,e)}while(0!==e);n.gzhead.hcrc&&n.pending>r&&(t.adler=Tt(t.adler,n.pending_buf,n.pending-r,r)),n.gzindex=0}n.status=91}if(91===n.status){if(n.gzhead.comment){let e,r=n.pending;do{if(n.pending===n.pending_buf_size){if(n.gzhead.hcrc&&n.pending>r&&(t.adler=Tt(t.adler,n.pending_buf,n.pending-r,r)),me(t),0!==n.pending)return n.last_flush=-1,Et;r=0}e=n.gzindex<n.gzhead.comment.length?255&n.gzhead.comment.charCodeAt(n.gzindex++):0,ge(n,e)}while(0!==e);n.gzhead.hcrc&&n.pending>r&&(t.adler=Tt(t.adler,n.pending_buf,n.pending-r,r))}n.status=103}if(103===n.status){if(n.gzhead.hcrc){if(n.pending+2>n.pending_buf_size&&(me(t),0!==n.pending))return n.last_flush=-1,Et;ge(n,255&t.adler),ge(n,t.adler>>8&255),t.adler=0}if(n.status=le,me(t),0!==n.pending)return n.last_flush=-1,Et}if(0!==t.avail_in||0!==n.lookahead||e!==Kt&&n.status!==ce){let r=0===n.level?Se(n,e):n.strategy===$t?((t,e)=>{let n;for(;;){if(0===t.lookahead&&(ve(t),0===t.lookahead)){if(e===Kt)return 1;break}if(t.match_length=0,n=At(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++,n&&(ke(t,!1),0===t.strm.avail_out))return 1}return t.insert=0,e===Dt?(ke(t,!0),0===t.strm.avail_out?3:4):t.sym_next&&(ke(t,!1),0===t.strm.avail_out)?1:2})(n,e):n.strategy===te?((t,e)=>{let n,r,s,i;const a=t.window;for(;;){if(t.lookahead<=ie){if(ve(t),t.lookahead<=ie&&e===Kt)return 1;if(0===t.lookahead)break}if(t.match_length=0,t.lookahead>=3&&t.strstart>0&&(s=t.strstart-1,r=a[s],r===a[++s]&&r===a[++s]&&r===a[++s])){i=t.strstart+ie;do{}while(r===a[++s]&&r===a[++s]&&r===a[++s]&&r===a[++s]&&r===a[++s]&&r===a[++s]&&r===a[++s]&&r===a[++s]&&s<i);t.match_length=ie-(i-s),t.match_length>t.lookahead&&(t.match_length=t.lookahead)}if(t.match_length>=3?(n=At(t,1,t.match_length-3),t.lookahead-=t.match_length,t.strstart+=t.match_length,t.match_length=0):(n=At(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++),n&&(ke(t,!1),0===t.strm.avail_out))return 1}return t.insert=0,e===Dt?(ke(t,!0),0===t.strm.avail_out?3:4):t.sym_next&&(ke(t,!1),0===t.strm.avail_out)?1:2})(n,e):He[n.level].func(n,e);if(3!==r&&4!==r||(n.status=ce),1===r||3===r)return 0===t.avail_out&&(n.last_flush=-1),Et;if(2===r&&(e===Wt?Xt(n):e!==Gt&&(Nt(n,0,0,!1),e===It&&(ue(n.head),0===n.lookahead&&(n.strstart=0,n.block_start=0,n.insert=0))),me(t),0===t.avail_out))return n.last_flush=-1,Et}return e!==Dt?Et:n.wrap<=0?Mt:(2===n.wrap?(ge(n,255&t.adler),ge(n,t.adler>>8&255),ge(n,t.adler>>16&255),ge(n,t.adler>>24&255),ge(n,255&t.total_in),ge(n,t.total_in>>8&255),ge(n,t.total_in>>16&255),ge(n,t.total_in>>24&255)):(be(n,t.adler>>>16),be(n,65535&t.adler)),me(t),n.wrap>0&&(n.wrap=-n.wrap),0!==n.pending?Et:Mt)},deflateEnd:t=>{if(Oe(t))return Qt;const e=t.state.status;return t.state=null,e===le?he(t,Yt):Et},deflateSetDictionary:(t,e)=>{let n=e.length;if(Oe(t))return Qt;const r=t.state,s=r.wrap;if(2===s||1===s&&r.status!==oe||r.lookahead)return Qt;if(1===s&&(t.adler=qt(t.adler,e,n,0)),r.wrap=0,n>=r.w_size){0===s&&(ue(r.head),r.strstart=0,r.block_start=0,r.insert=0);let t=new Uint8Array(r.w_size);t.set(e.subarray(n-r.w_size,n),0),e=t,n=r.w_size}const i=t.avail_in,a=t.next_in,o=t.input;for(t.avail_in=n,t.next_in=0,t.input=e,ve(r);r.lookahead>=3;){let t=r.strstart,e=r.lookahead-2;do{r.ins_h=pe(r,r.ins_h,r.window[t+3-1]),r.prev[t&r.w_mask]=r.head[r.ins_h],r.head[r.ins_h]=t,t++}while(--e);r.strstart=t,r.lookahead=2,ve(r)}return r.strstart+=r.lookahead,r.block_start=r.strstart,r.insert=r.lookahead,r.lookahead=0,r.match_length=r.prev_length=2,r.match_available=0,t.next_in=a,t.input=o,t.avail_in=i,r.wrap=s,Et},deflateInfo:"pako deflate (from Nodeca project)"};const Te=(t,e)=>Object.prototype.hasOwnProperty.call(t,e);var Fe={assign:function(t){const e=Array.prototype.slice.call(arguments,1);for(;e.length;){const n=e.shift();if(n){if("object"!=typeof n)throw new TypeError(n+"must be non-object");for(const e in n)Te(n,e)&&(t[e]=n[e])}}return t},flattenChunks:t=>{let e=0;for(let n=0,r=t.length;n<r;n++)e+=t[n].length;const n=new Uint8Array(e);for(let e=0,r=0,s=t.length;e<s;e++){let s=t[e];n.set(s,r),r+=s.length}return n}};let je=!0;try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(t){je=!1}const Ue=new Uint8Array(256);for(let t=0;t<256;t++)Ue[t]=t>=252?6:t>=248?5:t>=240?4:t>=224?3:t>=192?2:1;Ue[254]=Ue[254]=1;var Ne={string2buf:t=>{if("function"==typeof TextEncoder&&TextEncoder.prototype.encode)return(new TextEncoder).encode(t);let e,n,r,s,i,a=t.length,o=0;for(s=0;s<a;s++)n=t.charCodeAt(s),55296==(64512&n)&&s+1<a&&(r=t.charCodeAt(s+1),56320==(64512&r)&&(n=65536+(n-55296<<10)+(r-56320),s++)),o+=n<128?1:n<2048?2:n<65536?3:4;for(e=new Uint8Array(o),i=0,s=0;i<o;s++)n=t.charCodeAt(s),55296==(64512&n)&&s+1<a&&(r=t.charCodeAt(s+1),56320==(64512&r)&&(n=65536+(n-55296<<10)+(r-56320),s++)),n<128?e[i++]=n:n<2048?(e[i++]=192|n>>>6,e[i++]=128|63&n):n<65536?(e[i++]=224|n>>>12,e[i++]=128|n>>>6&63,e[i++]=128|63&n):(e[i++]=240|n>>>18,e[i++]=128|n>>>12&63,e[i++]=128|n>>>6&63,e[i++]=128|63&n);return e},buf2string:(t,e)=>{const n=e||t.length;if("function"==typeof TextDecoder&&TextDecoder.prototype.decode)return(new TextDecoder).decode(t.subarray(0,e));let r,s;const i=new Array(2*n);for(s=0,r=0;r<n;){let e=t[r++];if(e<128){i[s++]=e;continue}let a=Ue[e];if(a>4)i[s++]=65533,r+=a-1;else{for(e&=2===a?31:3===a?15:7;a>1&&r<n;)e=e<<6|63&t[r++],a--;a>1?i[s++]=65533:e<65536?i[s++]=e:(e-=65536,i[s++]=55296|e>>10&1023,i[s++]=56320|1023&e)}}return((t,e)=>{if(e<65534&&t.subarray&&je)return String.fromCharCode.apply(null,t.length===e?t:t.subarray(0,e));let n="";for(let r=0;r<e;r++)n+=String.fromCharCode(t[r]);return n})(i,s)},utf8border:(t,e)=>{(e=e||t.length)>t.length&&(e=t.length);let n=e-1;for(;n>=0&&128==(192&t[n]);)n--;return n<0||0===n?e:n+Ue[t[n]]>e?n:e}};var Le=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0};const Ae=Object.prototype.toString,{Z_NO_FLUSH:Xe,Z_SYNC_FLUSH:Ke,Z_FULL_FLUSH:We,Z_FINISH:Ie,Z_OK:De,Z_STREAM_END:Ge,Z_DEFAULT_COMPRESSION:Ee,Z_DEFAULT_STRATEGY:Me,Z_DEFLATED:Qe}=jt;function Ye(t){this.options=Fe.assign({level:Ee,method:Qe,chunkSize:16384,windowBits:15,memLevel:8,strategy:Me},t||{});let e=this.options;e.raw&&e.windowBits>0?e.windowBits=-e.windowBits:e.gzip&&e.windowBits>0&&e.windowBits<16&&(e.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new Le,this.strm.avail_out=0;let n=xe.deflateInit2(this.strm,e.level,e.method,e.windowBits,e.memLevel,e.strategy);if(n!==De)throw new Error(Ft[n]);if(e.header&&xe.deflateSetHeader(this.strm,e.header),e.dictionary){let t;if(t="string"==typeof e.dictionary?Ne.string2buf(e.dictionary):"[object ArrayBuffer]"===Ae.call(e.dictionary)?new Uint8Array(e.dictionary):e.dictionary,n=xe.deflateSetDictionary(this.strm,t),n!==De)throw new Error(Ft[n]);this._dict_set=!0}}function Ce(t,e){const n=new Ye(e);if(n.push(t,!0),n.err)throw n.msg||Ft[n.err];return n.result}Ye.prototype.push=function(t,e){const n=this.strm,r=this.options.chunkSize;let s,i;if(this.ended)return!1;for(i=e===~~e?e:!0===e?Ie:Xe,"string"==typeof t?n.input=Ne.string2buf(t):"[object ArrayBuffer]"===Ae.call(t)?n.input=new Uint8Array(t):n.input=t,n.next_in=0,n.avail_in=n.input.length;;)if(0===n.avail_out&&(n.output=new Uint8Array(r),n.next_out=0,n.avail_out=r),(i===Ke||i===We)&&n.avail_out<=6)this.onData(n.output.subarray(0,n.next_out)),n.avail_out=0;else{if(s=xe.deflate(n,i),s===Ge)return n.next_out>0&&this.onData(n.output.subarray(0,n.next_out)),s=xe.deflateEnd(this.strm),this.onEnd(s),this.ended=!0,s===De;if(0!==n.avail_out){if(i>0&&n.next_out>0)this.onData(n.output.subarray(0,n.next_out)),n.avail_out=0;else if(0===n.avail_in)break}else this.onData(n.output)}return!0},Ye.prototype.onData=function(t){this.chunks.push(t)},Ye.prototype.onEnd=function(t){t===De&&(this.result=Fe.flattenChunks(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg};var Be=function(t,e){return(e=e||{}).raw=!0,Ce(t,e)},_e=function(t,e){return(e=e||{}).gzip=!0,Ce(t,e)},$e={Deflate:Ye,deflate:Ce,deflateRaw:Be,gzip:_e,constants:jt};const tn=16209;var en=function(t,e){let n,r,s,i,a,o,l,c,h,d,u,f,p,m,k,g,b,y,w,v,S,R,J,z;const H=t.state;n=t.next_in,J=t.input,r=n+(t.avail_in-5),s=t.next_out,z=t.output,i=s-(e-t.avail_out),a=s+(t.avail_out-257),o=H.dmax,l=H.wsize,c=H.whave,h=H.wnext,d=H.window,u=H.hold,f=H.bits,p=H.lencode,m=H.distcode,k=(1<<H.lenbits)-1,g=(1<<H.distbits)-1;t:do{f<15&&(u+=J[n++]<<f,f+=8,u+=J[n++]<<f,f+=8),b=p[u&k];e:for(;;){if(y=b>>>24,u>>>=y,f-=y,y=b>>>16&255,0===y)z[s++]=65535&b;else{if(!(16&y)){if(64&y){if(32&y){H.mode=16191;break t}t.msg="invalid literal/length code",H.mode=tn;break t}b=p[(65535&b)+(u&(1<<y)-1)];continue e}for(w=65535&b,y&=15,y&&(f<y&&(u+=J[n++]<<f,f+=8),w+=u&(1<<y)-1,u>>>=y,f-=y),f<15&&(u+=J[n++]<<f,f+=8,u+=J[n++]<<f,f+=8),b=m[u&g];;){if(y=b>>>24,u>>>=y,f-=y,y=b>>>16&255,16&y){if(v=65535&b,y&=15,f<y&&(u+=J[n++]<<f,f+=8,f<y&&(u+=J[n++]<<f,f+=8)),v+=u&(1<<y)-1,v>o){t.msg="invalid distance too far back",H.mode=tn;break t}if(u>>>=y,f-=y,y=s-i,v>y){if(y=v-y,y>c&&H.sane){t.msg="invalid distance too far back",H.mode=tn;break t}if(S=0,R=d,0===h){if(S+=l-y,y<w){w-=y;do{z[s++]=d[S++]}while(--y);S=s-v,R=z}}else if(h<y){if(S+=l+h-y,y-=h,y<w){w-=y;do{z[s++]=d[S++]}while(--y);if(S=0,h<w){y=h,w-=y;do{z[s++]=d[S++]}while(--y);S=s-v,R=z}}}else if(S+=h-y,y<w){w-=y;do{z[s++]=d[S++]}while(--y);S=s-v,R=z}for(;w>2;)z[s++]=R[S++],z[s++]=R[S++],z[s++]=R[S++],w-=3;w&&(z[s++]=R[S++],w>1&&(z[s++]=R[S++]))}else{S=s-v;do{z[s++]=z[S++],z[s++]=z[S++],z[s++]=z[S++],w-=3}while(w>2);w&&(z[s++]=z[S++],w>1&&(z[s++]=z[S++]))}break}if(64&y){t.msg="invalid distance code",H.mode=tn;break t}b=m[(65535&b)+(u&(1<<y)-1)]}}break}}while(n<r&&s<a);w=f>>3,n-=w,f-=w<<3,u&=(1<<f)-1,t.next_in=n,t.next_out=s,t.avail_in=n<r?r-n+5:5-(n-r),t.avail_out=s<a?a-s+257:257-(s-a),H.hold=u,H.bits=f};const nn=15,rn=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]),sn=new Uint8Array([16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]),an=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]),on=new Uint8Array([16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]);var ln=(t,e,n,r,s,i,a,o)=>{const l=o.bits;let c,h,d,u,f,p,m=0,k=0,g=0,b=0,y=0,w=0,v=0,S=0,R=0,J=0,z=null;const H=new Uint16Array(16),V=new Uint16Array(16);let O,Z,P,q=null;for(m=0;m<=nn;m++)H[m]=0;for(k=0;k<r;k++)H[e[n+k]]++;for(y=l,b=nn;b>=1&&0===H[b];b--);if(y>b&&(y=b),0===b)return s[i++]=20971520,s[i++]=20971520,o.bits=1,0;for(g=1;g<b&&0===H[g];g++);for(y<g&&(y=g),S=1,m=1;m<=nn;m++)if(S<<=1,S-=H[m],S<0)return-1;if(S>0&&(0===t||1!==b))return-1;for(V[1]=0,m=1;m<nn;m++)V[m+1]=V[m]+H[m];for(k=0;k<r;k++)0!==e[n+k]&&(a[V[e[n+k]]++]=k);if(0===t?(z=q=a,p=20):1===t?(z=rn,q=sn,p=257):(z=an,q=on,p=0),J=0,k=0,m=g,f=i,w=y,v=0,d=-1,R=1<<y,u=R-1,1===t&&R>852||2===t&&R>592)return 1;for(;;){O=m-v,a[k]+1<p?(Z=0,P=a[k]):a[k]>=p?(Z=q[a[k]-p],P=z[a[k]-p]):(Z=96,P=0),c=1<<m-v,h=1<<w,g=h;do{h-=c,s[f+(J>>v)+h]=O<<24|Z<<16|P}while(0!==h);for(c=1<<m-1;J&c;)c>>=1;if(0!==c?(J&=c-1,J+=c):J=0,k++,0==--H[m]){if(m===b)break;m=e[n+a[k]]}if(m>y&&(J&u)!==d){for(0===v&&(v=y),f+=g,w=m-v,S=1<<w;w+v<b&&(S-=H[w+v],!(S<=0));)w++,S<<=1;if(R+=1<<w,1===t&&R>852||2===t&&R>592)return 1;d=J&u,s[d]=y<<24|w<<16|f-i}}return 0!==J&&(s[f+J]=m-v<<24|64<<16),o.bits=y,0};const{Z_FINISH:cn,Z_BLOCK:hn,Z_TREES:dn,Z_OK:un,Z_STREAM_END:fn,Z_NEED_DICT:pn,Z_STREAM_ERROR:mn,Z_DATA_ERROR:kn,Z_MEM_ERROR:gn,Z_BUF_ERROR:bn,Z_DEFLATED:yn}=jt,wn=16180,vn=16190,Sn=16191,Rn=16192,Jn=16194,zn=16199,Hn=16200,Vn=16206,On=16209,Zn=t=>(t>>>24&255)+(t>>>8&65280)+((65280&t)<<8)+((255&t)<<24);function Pn(){this.strm=null,this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Uint16Array(320),this.work=new Uint16Array(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}const qn=t=>{if(!t)return 1;const e=t.state;return!e||e.strm!==t||e.mode<wn||e.mode>16211?1:0},xn=t=>{if(qn(t))return mn;const e=t.state;return t.total_in=t.total_out=e.total=0,t.msg="",e.wrap&&(t.adler=1&e.wrap),e.mode=wn,e.last=0,e.havedict=0,e.flags=-1,e.dmax=32768,e.head=null,e.hold=0,e.bits=0,e.lencode=e.lendyn=new Int32Array(852),e.distcode=e.distdyn=new Int32Array(592),e.sane=1,e.back=-1,un},Tn=t=>{if(qn(t))return mn;const e=t.state;return e.wsize=0,e.whave=0,e.wnext=0,xn(t)},Fn=(t,e)=>{let n;if(qn(t))return mn;const r=t.state;return e<0?(n=0,e=-e):(n=5+(e>>4),e<48&&(e&=15)),e&&(e<8||e>15)?mn:(null!==r.window&&r.wbits!==e&&(r.window=null),r.wrap=n,r.wbits=e,Tn(t))},jn=(t,e)=>{if(!t)return mn;const n=new Pn;t.state=n,n.strm=t,n.window=null,n.mode=wn;const r=Fn(t,e);return r!==un&&(t.state=null),r};let Un,Nn,Ln=!0;const An=t=>{if(Ln){Un=new Int32Array(512),Nn=new Int32Array(32);let e=0;for(;e<144;)t.lens[e++]=8;for(;e<256;)t.lens[e++]=9;for(;e<280;)t.lens[e++]=7;for(;e<288;)t.lens[e++]=8;for(ln(1,t.lens,0,288,Un,0,t.work,{bits:9}),e=0;e<32;)t.lens[e++]=5;ln(2,t.lens,0,32,Nn,0,t.work,{bits:5}),Ln=!1}t.lencode=Un,t.lenbits=9,t.distcode=Nn,t.distbits=5},Xn=(t,e,n,r)=>{let s;const i=t.state;return null===i.window&&(i.wsize=1<<i.wbits,i.wnext=0,i.whave=0,i.window=new Uint8Array(i.wsize)),r>=i.wsize?(i.window.set(e.subarray(n-i.wsize,n),0),i.wnext=0,i.whave=i.wsize):(s=i.wsize-i.wnext,s>r&&(s=r),i.window.set(e.subarray(n-r,n-r+s),i.wnext),(r-=s)?(i.window.set(e.subarray(n-r,n),0),i.wnext=r,i.whave=i.wsize):(i.wnext+=s,i.wnext===i.wsize&&(i.wnext=0),i.whave<i.wsize&&(i.whave+=s))),0};var Kn={inflateReset:Tn,inflateReset2:Fn,inflateResetKeep:xn,inflateInit:t=>jn(t,15),inflateInit2:jn,inflate:(t,e)=>{let n,r,s,i,a,o,l,c,h,d,u,f,p,m,k,g,b,y,w,v,S,R,J=0;const z=new Uint8Array(4);let H,V;const O=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(qn(t)||!t.output||!t.input&&0!==t.avail_in)return mn;n=t.state,n.mode===Sn&&(n.mode=Rn),a=t.next_out,s=t.output,l=t.avail_out,i=t.next_in,r=t.input,o=t.avail_in,c=n.hold,h=n.bits,d=o,u=l,R=un;t:for(;;)switch(n.mode){case wn:if(0===n.wrap){n.mode=Rn;break}for(;h<16;){if(0===o)break t;o--,c+=r[i++]<<h,h+=8}if(2&n.wrap&&35615===c){0===n.wbits&&(n.wbits=15),n.check=0,z[0]=255&c,z[1]=c>>>8&255,n.check=Tt(n.check,z,2,0),c=0,h=0,n.mode=16181;break}if(n.head&&(n.head.done=!1),!(1&n.wrap)||(((255&c)<<8)+(c>>8))%31){t.msg="incorrect header check",n.mode=On;break}if((15&c)!==yn){t.msg="unknown compression method",n.mode=On;break}if(c>>>=4,h-=4,S=8+(15&c),0===n.wbits&&(n.wbits=S),S>15||S>n.wbits){t.msg="invalid window size",n.mode=On;break}n.dmax=1<<n.wbits,n.flags=0,t.adler=n.check=1,n.mode=512&c?16189:Sn,c=0,h=0;break;case 16181:for(;h<16;){if(0===o)break t;o--,c+=r[i++]<<h,h+=8}if(n.flags=c,(255&n.flags)!==yn){t.msg="unknown compression method",n.mode=On;break}if(57344&n.flags){t.msg="unknown header flags set",n.mode=On;break}n.head&&(n.head.text=c>>8&1),512&n.flags&&4&n.wrap&&(z[0]=255&c,z[1]=c>>>8&255,n.check=Tt(n.check,z,2,0)),c=0,h=0,n.mode=16182;case 16182:for(;h<32;){if(0===o)break t;o--,c+=r[i++]<<h,h+=8}n.head&&(n.head.time=c),512&n.flags&&4&n.wrap&&(z[0]=255&c,z[1]=c>>>8&255,z[2]=c>>>16&255,z[3]=c>>>24&255,n.check=Tt(n.check,z,4,0)),c=0,h=0,n.mode=16183;case 16183:for(;h<16;){if(0===o)break t;o--,c+=r[i++]<<h,h+=8}n.head&&(n.head.xflags=255&c,n.head.os=c>>8),512&n.flags&&4&n.wrap&&(z[0]=255&c,z[1]=c>>>8&255,n.check=Tt(n.check,z,2,0)),c=0,h=0,n.mode=16184;case 16184:if(1024&n.flags){for(;h<16;){if(0===o)break t;o--,c+=r[i++]<<h,h+=8}n.length=c,n.head&&(n.head.extra_len=c),512&n.flags&&4&n.wrap&&(z[0]=255&c,z[1]=c>>>8&255,n.check=Tt(n.check,z,2,0)),c=0,h=0}else n.head&&(n.head.extra=null);n.mode=16185;case 16185:if(1024&n.flags&&(f=n.length,f>o&&(f=o),f&&(n.head&&(S=n.head.extra_len-n.length,n.head.extra||(n.head.extra=new Uint8Array(n.head.extra_len)),n.head.extra.set(r.subarray(i,i+f),S)),512&n.flags&&4&n.wrap&&(n.check=Tt(n.check,r,f,i)),o-=f,i+=f,n.length-=f),n.length))break t;n.length=0,n.mode=16186;case 16186:if(2048&n.flags){if(0===o)break t;f=0;do{S=r[i+f++],n.head&&S&&n.length<65536&&(n.head.name+=String.fromCharCode(S))}while(S&&f<o);if(512&n.flags&&4&n.wrap&&(n.check=Tt(n.check,r,f,i)),o-=f,i+=f,S)break t}else n.head&&(n.head.name=null);n.length=0,n.mode=16187;case 16187:if(4096&n.flags){if(0===o)break t;f=0;do{S=r[i+f++],n.head&&S&&n.length<65536&&(n.head.comment+=String.fromCharCode(S))}while(S&&f<o);if(512&n.flags&&4&n.wrap&&(n.check=Tt(n.check,r,f,i)),o-=f,i+=f,S)break t}else n.head&&(n.head.comment=null);n.mode=16188;case 16188:if(512&n.flags){for(;h<16;){if(0===o)break t;o--,c+=r[i++]<<h,h+=8}if(4&n.wrap&&c!==(65535&n.check)){t.msg="header crc mismatch",n.mode=On;break}c=0,h=0}n.head&&(n.head.hcrc=n.flags>>9&1,n.head.done=!0),t.adler=n.check=0,n.mode=Sn;break;case 16189:for(;h<32;){if(0===o)break t;o--,c+=r[i++]<<h,h+=8}t.adler=n.check=Zn(c),c=0,h=0,n.mode=vn;case vn:if(0===n.havedict)return t.next_out=a,t.avail_out=l,t.next_in=i,t.avail_in=o,n.hold=c,n.bits=h,pn;t.adler=n.check=1,n.mode=Sn;case Sn:if(e===hn||e===dn)break t;case Rn:if(n.last){c>>>=7&h,h-=7&h,n.mode=Vn;break}for(;h<3;){if(0===o)break t;o--,c+=r[i++]<<h,h+=8}switch(n.last=1&c,c>>>=1,h-=1,3&c){case 0:n.mode=16193;break;case 1:if(An(n),n.mode=zn,e===dn){c>>>=2,h-=2;break t}break;case 2:n.mode=16196;break;case 3:t.msg="invalid block type",n.mode=On}c>>>=2,h-=2;break;case 16193:for(c>>>=7&h,h-=7&h;h<32;){if(0===o)break t;o--,c+=r[i++]<<h,h+=8}if((65535&c)!=(c>>>16^65535)){t.msg="invalid stored block lengths",n.mode=On;break}if(n.length=65535&c,c=0,h=0,n.mode=Jn,e===dn)break t;case Jn:n.mode=16195;case 16195:if(f=n.length,f){if(f>o&&(f=o),f>l&&(f=l),0===f)break t;s.set(r.subarray(i,i+f),a),o-=f,i+=f,l-=f,a+=f,n.length-=f;break}n.mode=Sn;break;case 16196:for(;h<14;){if(0===o)break t;o--,c+=r[i++]<<h,h+=8}if(n.nlen=257+(31&c),c>>>=5,h-=5,n.ndist=1+(31&c),c>>>=5,h-=5,n.ncode=4+(15&c),c>>>=4,h-=4,n.nlen>286||n.ndist>30){t.msg="too many length or distance symbols",n.mode=On;break}n.have=0,n.mode=16197;case 16197:for(;n.have<n.ncode;){for(;h<3;){if(0===o)break t;o--,c+=r[i++]<<h,h+=8}n.lens[O[n.have++]]=7&c,c>>>=3,h-=3}for(;n.have<19;)n.lens[O[n.have++]]=0;if(n.lencode=n.lendyn,n.lenbits=7,H={bits:n.lenbits},R=ln(0,n.lens,0,19,n.lencode,0,n.work,H),n.lenbits=H.bits,R){t.msg="invalid code lengths set",n.mode=On;break}n.have=0,n.mode=16198;case 16198:for(;n.have<n.nlen+n.ndist;){for(;J=n.lencode[c&(1<<n.lenbits)-1],k=J>>>24,g=J>>>16&255,b=65535&J,!(k<=h);){if(0===o)break t;o--,c+=r[i++]<<h,h+=8}if(b<16)c>>>=k,h-=k,n.lens[n.have++]=b;else{if(16===b){for(V=k+2;h<V;){if(0===o)break t;o--,c+=r[i++]<<h,h+=8}if(c>>>=k,h-=k,0===n.have){t.msg="invalid bit length repeat",n.mode=On;break}S=n.lens[n.have-1],f=3+(3&c),c>>>=2,h-=2}else if(17===b){for(V=k+3;h<V;){if(0===o)break t;o--,c+=r[i++]<<h,h+=8}c>>>=k,h-=k,S=0,f=3+(7&c),c>>>=3,h-=3}else{for(V=k+7;h<V;){if(0===o)break t;o--,c+=r[i++]<<h,h+=8}c>>>=k,h-=k,S=0,f=11+(127&c),c>>>=7,h-=7}if(n.have+f>n.nlen+n.ndist){t.msg="invalid bit length repeat",n.mode=On;break}for(;f--;)n.lens[n.have++]=S}}if(n.mode===On)break;if(0===n.lens[256]){t.msg="invalid code -- missing end-of-block",n.mode=On;break}if(n.lenbits=9,H={bits:n.lenbits},R=ln(1,n.lens,0,n.nlen,n.lencode,0,n.work,H),n.lenbits=H.bits,R){t.msg="invalid literal/lengths set",n.mode=On;break}if(n.distbits=6,n.distcode=n.distdyn,H={bits:n.distbits},R=ln(2,n.lens,n.nlen,n.ndist,n.distcode,0,n.work,H),n.distbits=H.bits,R){t.msg="invalid distances set",n.mode=On;break}if(n.mode=zn,e===dn)break t;case zn:n.mode=Hn;case Hn:if(o>=6&&l>=258){t.next_out=a,t.avail_out=l,t.next_in=i,t.avail_in=o,n.hold=c,n.bits=h,en(t,u),a=t.next_out,s=t.output,l=t.avail_out,i=t.next_in,r=t.input,o=t.avail_in,c=n.hold,h=n.bits,n.mode===Sn&&(n.back=-1);break}for(n.back=0;J=n.lencode[c&(1<<n.lenbits)-1],k=J>>>24,g=J>>>16&255,b=65535&J,!(k<=h);){if(0===o)break t;o--,c+=r[i++]<<h,h+=8}if(g&&!(240&g)){for(y=k,w=g,v=b;J=n.lencode[v+((c&(1<<y+w)-1)>>y)],k=J>>>24,g=J>>>16&255,b=65535&J,!(y+k<=h);){if(0===o)break t;o--,c+=r[i++]<<h,h+=8}c>>>=y,h-=y,n.back+=y}if(c>>>=k,h-=k,n.back+=k,n.length=b,0===g){n.mode=16205;break}if(32&g){n.back=-1,n.mode=Sn;break}if(64&g){t.msg="invalid literal/length code",n.mode=On;break}n.extra=15&g,n.mode=16201;case 16201:if(n.extra){for(V=n.extra;h<V;){if(0===o)break t;o--,c+=r[i++]<<h,h+=8}n.length+=c&(1<<n.extra)-1,c>>>=n.extra,h-=n.extra,n.back+=n.extra}n.was=n.length,n.mode=16202;case 16202:for(;J=n.distcode[c&(1<<n.distbits)-1],k=J>>>24,g=J>>>16&255,b=65535&J,!(k<=h);){if(0===o)break t;o--,c+=r[i++]<<h,h+=8}if(!(240&g)){for(y=k,w=g,v=b;J=n.distcode[v+((c&(1<<y+w)-1)>>y)],k=J>>>24,g=J>>>16&255,b=65535&J,!(y+k<=h);){if(0===o)break t;o--,c+=r[i++]<<h,h+=8}c>>>=y,h-=y,n.back+=y}if(c>>>=k,h-=k,n.back+=k,64&g){t.msg="invalid distance code",n.mode=On;break}n.offset=b,n.extra=15&g,n.mode=16203;case 16203:if(n.extra){for(V=n.extra;h<V;){if(0===o)break t;o--,c+=r[i++]<<h,h+=8}n.offset+=c&(1<<n.extra)-1,c>>>=n.extra,h-=n.extra,n.back+=n.extra}if(n.offset>n.dmax){t.msg="invalid distance too far back",n.mode=On;break}n.mode=16204;case 16204:if(0===l)break t;if(f=u-l,n.offset>f){if(f=n.offset-f,f>n.whave&&n.sane){t.msg="invalid distance too far back",n.mode=On;break}f>n.wnext?(f-=n.wnext,p=n.wsize-f):p=n.wnext-f,f>n.length&&(f=n.length),m=n.window}else m=s,p=a-n.offset,f=n.length;f>l&&(f=l),l-=f,n.length-=f;do{s[a++]=m[p++]}while(--f);0===n.length&&(n.mode=Hn);break;case 16205:if(0===l)break t;s[a++]=n.length,l--,n.mode=Hn;break;case Vn:if(n.wrap){for(;h<32;){if(0===o)break t;o--,c|=r[i++]<<h,h+=8}if(u-=l,t.total_out+=u,n.total+=u,4&n.wrap&&u&&(t.adler=n.check=n.flags?Tt(n.check,s,u,a-u):qt(n.check,s,u,a-u)),u=l,4&n.wrap&&(n.flags?c:Zn(c))!==n.check){t.msg="incorrect data check",n.mode=On;break}c=0,h=0}n.mode=16207;case 16207:if(n.wrap&&n.flags){for(;h<32;){if(0===o)break t;o--,c+=r[i++]<<h,h+=8}if(4&n.wrap&&c!==(4294967295&n.total)){t.msg="incorrect length check",n.mode=On;break}c=0,h=0}n.mode=16208;case 16208:R=fn;break t;case On:R=kn;break t;case 16210:return gn;default:return mn}return t.next_out=a,t.avail_out=l,t.next_in=i,t.avail_in=o,n.hold=c,n.bits=h,(n.wsize||u!==t.avail_out&&n.mode<On&&(n.mode<Vn||e!==cn))&&Xn(t,t.output,t.next_out,u-t.avail_out),d-=t.avail_in,u-=t.avail_out,t.total_in+=d,t.total_out+=u,n.total+=u,4&n.wrap&&u&&(t.adler=n.check=n.flags?Tt(n.check,s,u,t.next_out-u):qt(n.check,s,u,t.next_out-u)),t.data_type=n.bits+(n.last?64:0)+(n.mode===Sn?128:0)+(n.mode===zn||n.mode===Jn?256:0),(0===d&&0===u||e===cn)&&R===un&&(R=bn),R},inflateEnd:t=>{if(qn(t))return mn;let e=t.state;return e.window&&(e.window=null),t.state=null,un},inflateGetHeader:(t,e)=>{if(qn(t))return mn;const n=t.state;return 2&n.wrap?(n.head=e,e.done=!1,un):mn},inflateSetDictionary:(t,e)=>{const n=e.length;let r,s,i;return qn(t)?mn:(r=t.state,0!==r.wrap&&r.mode!==vn?mn:r.mode===vn&&(s=1,s=qt(s,e,n,0),s!==r.check)?kn:(i=Xn(t,e,n,n),i?(r.mode=16210,gn):(r.havedict=1,un)))},inflateInfo:"pako inflate (from Nodeca project)"};var Wn=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1};const In=Object.prototype.toString,{Z_NO_FLUSH:Dn,Z_FINISH:Gn,Z_OK:En,Z_STREAM_END:Mn,Z_NEED_DICT:Qn,Z_STREAM_ERROR:Yn,Z_DATA_ERROR:Cn,Z_MEM_ERROR:Bn}=jt;function _n(t){this.options=Fe.assign({chunkSize:65536,windowBits:15,to:""},t||{});const e=this.options;e.raw&&e.windowBits>=0&&e.windowBits<16&&(e.windowBits=-e.windowBits,0===e.windowBits&&(e.windowBits=-15)),!(e.windowBits>=0&&e.windowBits<16)||t&&t.windowBits||(e.windowBits+=32),e.windowBits>15&&e.windowBits<48&&(15&e.windowBits||(e.windowBits|=15)),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new Le,this.strm.avail_out=0;let n=Kn.inflateInit2(this.strm,e.windowBits);if(n!==En)throw new Error(Ft[n]);if(this.header=new Wn,Kn.inflateGetHeader(this.strm,this.header),e.dictionary&&("string"==typeof e.dictionary?e.dictionary=Ne.string2buf(e.dictionary):"[object ArrayBuffer]"===In.call(e.dictionary)&&(e.dictionary=new Uint8Array(e.dictionary)),e.raw&&(n=Kn.inflateSetDictionary(this.strm,e.dictionary),n!==En)))throw new Error(Ft[n])}function $n(t,e){const n=new _n(e);if(n.push(t),n.err)throw n.msg||Ft[n.err];return n.result}_n.prototype.push=function(t,e){const n=this.strm,r=this.options.chunkSize,s=this.options.dictionary;let i,a,o;if(this.ended)return!1;for(a=e===~~e?e:!0===e?Gn:Dn,"[object ArrayBuffer]"===In.call(t)?n.input=new Uint8Array(t):n.input=t,n.next_in=0,n.avail_in=n.input.length;;){for(0===n.avail_out&&(n.output=new Uint8Array(r),n.next_out=0,n.avail_out=r),i=Kn.inflate(n,a),i===Qn&&s&&(i=Kn.inflateSetDictionary(n,s),i===En?i=Kn.inflate(n,a):i===Cn&&(i=Qn));n.avail_in>0&&i===Mn&&n.state.wrap>0&&0!==t[n.next_in];)Kn.inflateReset(n),i=Kn.inflate(n,a);switch(i){case Yn:case Cn:case Qn:case Bn:return this.onEnd(i),this.ended=!0,!1}if(o=n.avail_out,n.next_out&&(0===n.avail_out||i===Mn))if("string"===this.options.to){let t=Ne.utf8border(n.output,n.next_out),e=n.next_out-t,s=Ne.buf2string(n.output,t);n.next_out=e,n.avail_out=r-e,e&&n.output.set(n.output.subarray(t,t+e),0),this.onData(s)}else this.onData(n.output.length===n.next_out?n.output:n.output.subarray(0,n.next_out));if(i!==En||0!==o){if(i===Mn)return i=Kn.inflateEnd(this.strm),this.onEnd(i),this.ended=!0,!0;if(0===n.avail_in)break}}return!0},_n.prototype.onData=function(t){this.chunks.push(t)},_n.prototype.onEnd=function(t){t===En&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=Fe.flattenChunks(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg};var tr=function(t,e){return(e=e||{}).raw=!0,$n(t,e)},er={Inflate:_n,inflate:$n,inflateRaw:tr,ungzip:$n,constants:jt};const{Deflate:nr,deflate:rr,deflateRaw:sr,gzip:ir}=$e,{Inflate:ar,inflate:or,inflateRaw:lr,ungzip:cr}=er;var hr={Deflate:nr,deflate:rr,deflateRaw:sr,gzip:ir,Inflate:ar,inflate:or,inflateRaw:lr,ungzip:cr,constants:jt};const dr=new Uint8Array(atob("").split("").map((t=>t.charCodeAt(0)))),ur=new E(JSON.parse(hr.ungzip(dr,{to:"string"})),{includeScore:!0,keys:["id"],threshold:0,useExtendedSearch:!0});const fr=new MouseEvent("click",{bubbles:!0,cancelable:!0,view:window});let pr=0;let mr=JSON.parse(localStorage.getItem("mainList"))||[],kr=localStorage.getItem("mainListTotal")||0,gr=null,br=[],yr=null,wr=null,vr="";!function(){const t=window.XMLHttpRequest;window.XMLHttpRequest=function(){const e=new t,n=e.open,r=e.send;return e.open=function(){return n.apply(this,arguments)},e.send=function(t){return this.addEventListener("load",(function(){if(this.responseURL.includes("exam-boot/course/study")&&this.responseURL.includes("pageSize=12")){const t=JSON.parse(this.response).result;mr=[...mr,...t.records.map((t=>t.id))],kr=t.total,localStorage.setItem("mainList",JSON.stringify(mr)),localStorage.setItem("mainListTotal",kr)}else if(this.responseURL.includes("exam-boot/course/getCourseStudyDetail"))gr=JSON.parse(this.response).result;else if(this.responseURL.includes("exam/examDetail"))wr=JSON.parse(this.response).result;else if(this.responseURL.includes("userExamResultDetail"))yr=JSON.parse(this.response).result;else if(this.responseURL.includes("course/userCourseList")){const t=JSON.parse(this.response).result.records.map((t=>t.id));mr=mr.filter((e=>!t.includes(e))),localStorage.setItem("mainList",JSON.stringify(mr))}else this.responseURL.includes("listQuestionByMode")})),r.apply(this,arguments)},e};const e=window.fetch;window.fetch=function(){return e.apply(this,arguments).then((t=>(t.clone().text().then((t=>{})),t)))}}();let Sr=null,Rr=0;function Jr(t,e){return function(...n){const r=Date.now();r-Rr>=e?(t.apply(this,n),Rr=r):Sr||(Sr=setTimeout((()=>{t.apply(this,n),Rr=r,Sr=null}),e-(r-Rr)))}}const zr=window.open;window.open=function(t,e,n){if("_blank"!==e)return zr(t,e,n);window.location.href=t};const Hr=t=>{window.location.href=`https://service.cpma.org.cn/edu/course/courseDetails/${t}`};setInterval((()=>{const t=window.location.pathname;if(t.includes("home"))localStorage.setItem("mainList",JSON.stringify([]));else if(t.includes("course/study"))kr&&kr<=mr.length?window.location.href="https://service.cpma.org.cn/edu/system/person":document.querySelector(".ant-pagination-next")?.click();else if(t.includes("course/courseDetails")){if(!gr)return;if(gr?.finishNum<gr?.catalogList.length&&(n=mr[0],window.location.href=`https://service.cpma.org.cn/edu/course/onlineStudy/${n}`),1===gr?.courseStudyProcess){document.querySelector(".ant-modal-body .ant-btn-primary")?document.querySelector(".ant-modal-body .ant-btn-primary").click():(document.querySelector("#rc-tabs-0-tab-courseExam")?.click(),Jr((()=>{const t=document.querySelector(".ant-space-item .ant-btn-warning");t?(t.dispatchEvent(fr),"通过"===document.querySelector(".ant-card-body .ant-tag").innerText.trim()?mr.length>1?(Jr((()=>{vr=mr.shift()}),3e3)(),localStorage.setItem("mainList",JSON.stringify(mr)),Hr(mr[0])):localStorage.setItem("mainList",JSON.stringify([])):document.querySelector(".ant-space-item .ant-btn-primary")?.dispatchEvent(fr)):document.querySelector(".ant-space-item .ant-btn-primary")?.dispatchEvent(fr)}),5e3)())}}else if(t.includes("course/onlineStudy")){const r=document.querySelector("video");if(br&&!br.length&&(br=[...document.querySelectorAll(".double-layer .section-title")]),r){const s=16;(r.paused||r.playbackRate!==s)&&(r.volume=0,r.playbackRate=s,r.play());const i=setInterval((()=>{r.currentTime+30<r.duration?r.currentTime+=30:(r.currentTime=r.duration,clearInterval(i)),r.duration&&(r.currentTime=r.duration-1)}),1e3);function a(){const t=br.shift();t?t.querySelector(".task-hour").innerText.includes("已学完")?a():t.click():mr[0]&&Hr(mr[0])}r.addEventListener("ended",a)}}else if(t.includes("exam/userexamresult")){const o=[...document.querySelectorAll(".ant-anchor-link")].every((t=>t.classList.contains("success")));yr&&Jr((()=>{o?setTimeout((()=>{vr=mr[0],Hr(mr[0])}),1e3):(document.querySelector(".score-card").addEventListener("click",(()=>{vr=mr[0],Hr(mr[0])})),setTimeout((()=>{[...document.querySelectorAll(".score-box span")].some((t=>"通过"===t.innerText.trim()))&&(vr=mr[0],Hr(mr[0]))}),1e3))}),1e4)()}else if(t.includes("exam/onlineExam")){const l=document.querySelector(".qu-item .num");if(wr&&l){const c=+l?.innerText.trim()-1,h=wr.userExamQuestionList[c],d=(e=h.questionId,ur.search(e)),u=h.question.answerList.filter((t=>d[0].item.answerId.includes(t.id))),f=[];u.forEach((t=>{f.push(t.sort-1)})),[...document.querySelectorAll(".qu-answer .item")].forEach(((t,e)=>{if("填空题"===d[0].item.type){const n=t.querySelector("input");n.focus(),n.value=d[0].item.answer[e];const r=new Event("change",{bubbles:!0});n.dispatchEvent(r),n.blur()}else f.includes(e)&&!t.classList.contains("active")&&t.click(),!f.includes(e)&&t.classList.contains("active")&&t.click()})),[...document.querySelectorAll(".qu-answer .active")].length===f.length&&document.querySelector(".ant-btn.ant-btn-warning")?.click()}document.querySelector(".ant-progress-text svg")&&Jr((()=>{++pr>3&&(pr=0,Hr(mr[0])),document.querySelector(".all-box-right .ant-btn.ant-btn-primary").click()}),2e3)()}else if(t.includes("system/person")){[...document.querySelectorAll(".ant-tabs-nav-list .ant-tabs-tab")].find((t=>t.innerText.includes("已学课程")))?.click();const p=document.querySelector(".ant-pagination-next");p?.click();(document.querySelector(".ant-pagination-prev")&&"true"===p.getAttribute("aria-disabled")||document.querySelector(".ant-empty-image"))&&Hr(mr[0])}else t.includes("practice/mode")||t.includes("practice/onlinePractice");var e,n}),1e3),setInterval((()=>{+(document.querySelector("#app > section > section > section > div.jeecg-layout-content.full > div.ant-spin-nested-loading > div > div > div.section-main > section > div > div.ant-card-body > p > div > div > div > div > div:nth-child(2) > div.ant-card-body > div > div:nth-child(3) > div:nth-child(3) > span")?.innerText||0)>49&&(mr.includes(vr)&&(mr.length>1?(mr.shift(),localStorage.setItem("mainList",JSON.stringify(mr))):localStorage.setItem("mainList",JSON.stringify([]))),setTimeout((()=>{vr=mr[0],Hr(mr[0])}),1e3)),location.reload()}),6e4)})();

})();
